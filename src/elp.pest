alpha = { 'a'..'z' | 'A'..'Z' }
digit = { '0'..'9' }
alphaNumerical = { (alpha | digit)+ }

Program = _{ SOI ~ (Expression)+ ~ EOI }

Expression = _{
	Import
	| Function
	| Export
	| Array
	| IdentType
	| MemberAssignment
}


Ident = { ( !digit ~ (alphaNumerical)+ ) }

Import = { "import" ~ "{" ~ (Ident ~ ("," ~ Ident)?)+ ~ "}" ~ "from" ~ (Ident) }
IdentType = { ( LifeCycleModifier? ~ Ident ~ Ident ) }
Function = { (Ident) ~ ( "(" ~ IdentType ~ ")" )? ~ "{" ~ (Expression)* ~ "}" }
Export = { "export" ~ Function }
Array = { "[" ~ Expression ~ "]" }
MemberAssignment = { "." ~ (Ident) ~ "=" ~ (Expression) }
LifeCycleModifier = { ( "const" | "async" ) }

StringLiteral = { "\"" ~ StringLiteralInterior ~ "\"" }
StringLiteralInterior = { ( !("\"" ~ PEEK) ~ ANY )* }
