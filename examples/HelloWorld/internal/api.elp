import { Error } from "elp"
import { Fetch } from "elp/net"

export object Content {
    userId: string
    id:     string
    title:  string
    body:   string
}

export object ApiError implements Error {
    message: string

    fn toString() -> String {
        return .message
    }
}

export fn getAboutContent() -> Reactive<Content, ApiError> {
    return Fetch<Content, ApiError>("https://jsonplaceholder.typicode.com/posts/1")
}

export fn getBlogPost(id: string) -> Reactive<Content, ApiError> {
    return Fetch<Content, ApiError>("https://jsonplaceholder.typicode.com/posts/{id}")
}

// vim: ft=swift
